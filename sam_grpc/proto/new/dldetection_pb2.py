# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dldetection.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11\x64ldetection.proto\x12\taiservice\"%\n\x05Image\x12\x0e\n\x06imdata\x18\x01 \x01(\x0c\x12\x0c\n\x04path\x18\x02 \x01(\t\"e\n\x0eInputInferArgs\x12(\n\x08\x66\x65\x61tures\x18\x01 \x01(\x0b\x32\x16.aiservice.TensorFloat\x12\x12\n\ninput_size\x18\x02 \x03(\x05\x12\x15\n\roriginal_size\x18\x03 \x03(\x05\"\x9a\x02\n\x11SAMPredictRequest\x12-\n\ninfer_args\x18\x01 \x01(\x0b\x32\x19.aiservice.InputInferArgs\x12*\n\x0cpoint_coords\x18\x02 \x01(\x0b\x32\x14.aiservice.TensorInt\x12*\n\x0cpoint_labels\x18\x03 \x01(\x0b\x32\x14.aiservice.TensorInt\x12!\n\x03\x62ox\x18\x04 \x01(\x0b\x32\x14.aiservice.TensorInt\x12*\n\nmask_input\x18\x05 \x01(\x0b\x32\x16.aiservice.TensorFloat\x12\x18\n\x10multimask_output\x18\x06 \x01(\x08\x12\x15\n\rreturn_logits\x18\x07 \x01(\x08\"\x9a\x01\n\x12SAMPredictResponse\x12$\n\x05masks\x18\x01 \x01(\x0b\x32\x15.aiservice.TensorBool\x12&\n\x06scores\x18\x02 \x01(\x0b\x32\x16.aiservice.TensorFloat\x12&\n\x06logits\x18\x03 \x01(\x0b\x32\x16.aiservice.TensorFloat\x12\x0e\n\x06status\x18\x04 \x01(\x05\"5\n\x0bServerCache\x12\x12\n\ncache_name\x18\x01 \x01(\t\x12\x12\n\ncache_type\x18\x02 \x01(\t\"#\n\x11\x43leanCacheRespose\x12\x0e\n\x06status\x18\x01 \x01(\x05\"\xa5\x02\n\x19SAMPredictUseCacheRequest\x12\x30\n\x10infer_args_cache\x18\x01 \x01(\x0b\x32\x16.aiservice.ServerCache\x12*\n\x0cpoint_coords\x18\x02 \x01(\x0b\x32\x14.aiservice.TensorInt\x12*\n\x0cpoint_labels\x18\x03 \x01(\x0b\x32\x14.aiservice.TensorInt\x12!\n\x03\x62ox\x18\x04 \x01(\x0b\x32\x14.aiservice.TensorInt\x12*\n\nmask_input\x18\x05 \x01(\x0b\x32\x16.aiservice.TensorFloat\x12\x18\n\x10multimask_output\x18\x06 \x01(\x08\x12\x15\n\rreturn_logits\x18\x07 \x01(\x08\"*\n\x0bTensorFloat\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\x02\x12\r\n\x05shape\x18\x02 \x03(\x05\")\n\nTensorBool\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\x08\x12\r\n\x05shape\x18\x02 \x03(\x05\"(\n\tTensorInt\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\x05\x12\r\n\x05shape\x18\x02 \x03(\x05\x32\x8e\x03\n\tAiService\x12\x45\n\x14SAMGetImageEmbedding\x12\x10.aiservice.Image\x1a\x19.aiservice.InputInferArgs\"\x00\x12J\n\x1cSAMGetImageEmbeddingUseCache\x12\x10.aiservice.Image\x1a\x16.aiservice.ServerCache\"\x00\x12K\n\nSAMPredict\x12\x1c.aiservice.SAMPredictRequest\x1a\x1d.aiservice.SAMPredictResponse\"\x00\x12[\n\x12SAMPredictUseCache\x12$.aiservice.SAMPredictUseCacheRequest\x1a\x1d.aiservice.SAMPredictResponse\"\x00\x12\x44\n\nCleanCache\x12\x16.aiservice.ServerCache\x1a\x1c.aiservice.CleanCacheRespose\"\x00\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'dldetection_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _IMAGE._serialized_start=32
  _IMAGE._serialized_end=69
  _INPUTINFERARGS._serialized_start=71
  _INPUTINFERARGS._serialized_end=172
  _SAMPREDICTREQUEST._serialized_start=175
  _SAMPREDICTREQUEST._serialized_end=457
  _SAMPREDICTRESPONSE._serialized_start=460
  _SAMPREDICTRESPONSE._serialized_end=614
  _SERVERCACHE._serialized_start=616
  _SERVERCACHE._serialized_end=669
  _CLEANCACHERESPOSE._serialized_start=671
  _CLEANCACHERESPOSE._serialized_end=706
  _SAMPREDICTUSECACHEREQUEST._serialized_start=709
  _SAMPREDICTUSECACHEREQUEST._serialized_end=1002
  _TENSORFLOAT._serialized_start=1004
  _TENSORFLOAT._serialized_end=1046
  _TENSORBOOL._serialized_start=1048
  _TENSORBOOL._serialized_end=1089
  _TENSORINT._serialized_start=1091
  _TENSORINT._serialized_end=1131
  _AISERVICE._serialized_start=1134
  _AISERVICE._serialized_end=1532
# @@protoc_insertion_point(module_scope)
